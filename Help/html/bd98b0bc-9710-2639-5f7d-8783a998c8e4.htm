<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SimpleTypeExtensions Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SimpleTypeExtensions class" /><meta name="System.Keywords" content="FallDave.Trifles.SimpleTypeExtensions class" /><meta name="System.Keywords" content="SimpleTypeExtensions class, about SimpleTypeExtensions class" /><meta name="Microsoft.Help.F1" content="FallDave.Trifles.SimpleTypeExtensions" /><meta name="Microsoft.Help.Id" content="T:FallDave.Trifles.SimpleTypeExtensions" /><meta name="Description" content="Extension methods applicable to the simple types defined by C# ( bool, byte, char, decimal, double, float, int, long, sbyte, short, uint, ulong, and ushort), specifically, to retrieve the value which all that is known about the value is that it is an ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="FallDave.Trifles" /><meta name="file" content="bd98b0bc-9710-2639-5f7d-8783a998c8e4" /><meta name="guid" content="bd98b0bc-9710-2639-5f7d-8783a998c8e4" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8212db58-4bb1-4510-9c0e-2744321a36b2.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2a01a081-bfd9-d49e-0df0-0b2e5cb5e0bd.htm" title="FallDave.Trifles" tocid="2a01a081-bfd9-d49e-0df0-0b2e5cb5e0bd">FallDave.Trifles</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="bd98b0bc-9710-2639-5f7d-8783a998c8e4.htm" title="SimpleTypeExtensions Class" tocid="bd98b0bc-9710-2639-5f7d-8783a998c8e4">SimpleTypeExtensions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7b579fc8-dd2c-4d76-74c4-85b7e7ca4344.htm" title="SimpleTypeExtensions Methods" tocid="7b579fc8-dd2c-4d76-74c4-85b7e7ca4344">SimpleTypeExtensions Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">SimpleTypeExtensions Class</td></tr></table><span class="introStyle"></span><div class="summary">
            Extension methods applicable to the simple types defined by C# ( <span class="code">bool</span>, <span class="code">byte</span>,
            <span class="code">char</span>, <span class="code">decimal</span>, <span class="code">double</span>, <span class="code">float</span>, <span class="code">int</span>, <span class="code">long</span>,
            <span class="code">sbyte</span>, <span class="code">short</span>, <span class="code">uint</span>, <span class="code">ulong</span>, and <span class="code">ushort</span>), specifically, to
            retrieve the value which all that is known about the value is that it is an <a href="http://msdn2.microsoft.com/en-us/library/tyz9cd4z" target="_blank">IConvertible</a>.
            <p>
            To utilize these methods on some arbitrary value or object, cast it (applying any checking
            necessary) to <a href="http://msdn2.microsoft.com/en-us/library/tyz9cd4z" target="_blank">IConvertible</a>, an interface implemented by all of the basic
                       types. If the cast cannot be performed, the value is known not to be of a simple
            type (all simple types implement <a href="http://msdn2.microsoft.com/en-us/library/tyz9cd4z" target="_blank">IConvertible</a>). If the cast succeeds, the
            methods in this class become available.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST4DBA080F_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DBA080F_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">FallDave.Trifles<span id="LST4DBA080F_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DBA080F_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SimpleTypeExtensions</span><br /></div><p> </p><strong>Namespace:</strong> <a href="2a01a081-bfd9-d49e-0df0-0b2e5cb5e0bd.htm">FallDave.Trifles</a><br /><strong>Assembly:</strong> FallDave.Trifles (in FallDave.Trifles.dll) Version: 1.0.6772.25531<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">SimpleTypeExtensions</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">SimpleTypeExtensions</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SimpleTypeExtensions</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">SimpleTypeExtensions</span> =  <span class="keyword">class</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">SimpleTypeExtensions</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f86e7263-8bef-fb14-4224-5bc93c6de5b0.htm">DecimalValueOpt</a></td><td><div class="summary">
            If the specified value is of the type <span class="code">decimal</span>, gets the value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="6ca82ac7-0fb7-2fd8-5684-fe9eb249fa6d.htm">FloatingPointValueOpt</a></td><td><div class="summary">
            If the specified value is of a floating-point type, gets the value as a <span class="code">double</span>.
            <p>The result is empty if the specified value is not of a floating-point type.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7ca0f031-ea57-2b47-fa65-f2edd5e3d927.htm">HasSimpleType</a></td><td><div class="summary">
            Determines whether the specified value is of one of the simple types defined by C#.
            <p>
            The simple types defined by C# are <span class="code">bool</span>, <span class="code">byte</span>, <span class="code">char</span>,
            <span class="code">decimal</span>, <span class="code">double</span>, <span class="code">float</span>, <span class="code">int</span>, <span class="code">long</span>, <span class="code">sbyte</span>,
            <span class="code">short</span>, <span class="code">uint</span>, <span class="code">ulong</span>, and <span class="code">ushort</span>.
            </p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="3dfafaac-9da8-8367-c97a-9dd45ea5a16a.htm">IsFloatingPoint</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain floating-point values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9baee07f-d4c2-15aa-b892-592e3f9455ca.htm">IsIntegral</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain integer values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="693538a7-8b89-96a0-6195-99c46adfab28.htm">IsIntegralAndNotChar</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain integer values but is not a <span class="code">char</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9792fc67-f1e0-df66-6ca6-c8ded1664d7f.htm">IsNumeric</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain numeric values.
            <p>
            This method is equivalent to
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAAKDDA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABAAKDDA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAAKDDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">value</span>.IsIntegral() || <span class="highlight-keyword">value</span>.IsFloatingPoint() || (<span class="highlight-keyword">value</span> <span class="highlight-keyword">is</span> <span class="highlight-keyword">decimal</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAAKDDA");</script>.
            </p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="06d9fc27-e7b9-3a99-4200-94a8c4f27eba.htm">IsNumericAndNotChar</a></td><td><div class="summary"> Determines whether the specified value is one of the simple types defined by
            C# to contain numeric values but is not a <span class="code">char</span>. <p> This method is equivalent
            to <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAAJDDA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABAAJDDA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAAJDDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">value</span>.IsNumeric() &amp;&amp; !(<span class="highlight-keyword">value</span> <span class="highlight-keyword">is</span> <span class="highlight-keyword">char</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAAJDDA");</script>. </p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="80a2c1fd-c83e-2ec2-b219-16ea0c026b06.htm">IsSignedIntegral</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain signed integer values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4e1ffc97-bb61-2d90-a29f-794197795f9c.htm">IsUnsignedIntegral</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contain unsigned integer values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4c64502c-729f-56ea-75e2-072320757544.htm">IsUnsignedIntegralAndNotChar</a></td><td><div class="summary">
            Determines whether the specified value is one of the simple types defined by C# to
            contained unsigned integer values but is not a <span class="code">char</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e6c37586-4f9c-44fb-723c-576ad7604852.htm">NumericValueAsDecimalOpt</a></td><td><div class="summary">
            If the specified value is of any numeric type, retrieves the value as a <span class="code">decimal</span>,
            casting if necessary.
            <p>The result is empty if the specified value is not of a numeric type.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="5dca04c0-1e95-8460-a510-be30afa9da7b.htm">NumericValueAsDoubleOpt</a></td><td><div class="summary">
            If the specified value is of any numeric type, retrieves the value as a <span class="code">double</span>,
            casting if necessary.
            <p>The result is empty if the specified value is not of a numeric type.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c8f32110-536f-a52a-89cf-610f31acafcc.htm">NumericValueToNonScientificStringOpt</a></td><td><div class="summary">
            If the specified value is of a numeric type, retrieves the value as a string whose value
            is encoded, using the invariant culture, in its full length without the use of
            scientific/exponential notation. ("Infinity", "-Infinity", and "NaN" are encoded using
            those names.)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="39c4824b-9097-8d11-4ace-370685919948.htm">NumericValueToStringOpt(IConvertible, IFormatProvider)</a></td><td><div class="summary">
            If the given value is of a numeric type, converts the value to a string representation
            using the specified culture-specific format information. Returns empty if this value is not of a
            numeric type.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7ee88e48-52af-0328-1474-7e91f9df2688.htm">NumericValueToStringOpt(IConvertible, String)</a></td><td><div class="summary">
            If the given value is of a numeric type, converts the value to a string representation
            using the specified format. Returns empty if this value is not of a numeric type.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0b286ec2-9a43-5283-198a-576b897707d7.htm">NumericValueToStringOpt(IConvertible, String, IFormatProvider)</a></td><td><div class="summary">
            If the given value is of a numeric type, converts the value to a string representation
            using the specified format and culture-specific format information. Returns empty if this value is not of a
            numeric type.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f5bba8d4-d128-d487-e049-acae4ed65cbd.htm">SignedIntegralValueOpt</a></td><td><div class="summary">
            If the specified value is of any integral type and can be cast losslessly to a
            <span class="code">long</span>, gets the value as a <span class="code">long</span>.
            <p>
            If the value is a <span class="code">ulong</span> but can be converted to a <span class="code">long</span> without losing
            data, this method gets the converted value.
            </p><p>
            The result is empty if the specified value is not of an integral type or is of
            <span class="code">ulong</span> with a value that cannot be stored losslessly as a <span class="code">long</span>.
            </p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e85520e9-c034-eb84-a558-3802b859adf9.htm">UnsignedIntegralValueOpt</a></td><td><div class="summary">
            If the specified value is of any integral type and can be cast losslessly to a
            <span class="code">ulong</span>, gets the value as a <span class="code">ulong</span>.
            <p>
            If the value is of a signed integral type but can be converted to a <span class="code">ulong</span> without
            losing data (i.e., the value is nonnegative), this method gets the converted value.
            </p><p>
            The result is empty if the specified value is not of an integral type or has a negative value.
            </p></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="2a01a081-bfd9-d49e-0df0-0b2e5cb5e0bd.htm">FallDave.Trifles Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>